@model IEnumerable<dynamic>

@{
    Layout = null;
    var currentPage = ViewBag.CurrentPage as int? ?? 1;
    var totalPages = ViewBag.TotalPages as int? ?? 1;
    var userName = ViewBag.UserName;
    var displayPages = 15; // Number of pages to display in the pagination
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>View Entries</title>
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/css/viewentries.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css" />
</head>
<body>
    @Html.Partial("_Header")

    <div class="page-container">
        <!-- Button Container -->
        <div class="button-container">
            <button id="addEntryButton" onclick="location.href='/Helpdesk/Index'">Adaugare Apel</button>
        </div>
        <div class="button-container">
            <button id="filterButton">Filtrare</button>
            <!-- Export Button -->
            <div class="export-button">
                Export
                <div class="export-options">
                    <a href="#" onclick="exportEntries('excel')">Excel</a>
                    <a href="#" onclick="exportEntries('pdf')">PDF</a>
                </div>
            </div>
        </div>

        <!-- Filter Dropdown Menu -->
        <div id="filterDropdown" class="dropdown-content">
            <div>
                <label for="filterFirma">Firma:</label>
                <input type="text" id="filterFirma" name="filterFirma" value="@ViewBag.FilterFirma">
                <div id="firmaSuggestions" class="suggestions"></div>
            </div>
            <div>
                <label for="filterPctLucru">Punct de Lucru:</label>
                <input type="text" id="filterPctLucru" name="filterPctLucru" value="@ViewBag.FilterPctLucru">
                <div id="pctLucruSuggestions" class="suggestions"></div>
            </div>
            <div>
                <label for="filterNrTelefon">Numar Telefon:</label>
                <input type="text" id="filterNrTelefon" name="filterNrTelefon" value="@ViewBag.FilterNrTelefon">
                <div id="nrTelefonSuggestions" class="suggestions"></div>
            </div>
            <div>
                <label for="startDate">Start Date:</label>
                <input type="date" id="startDate" name="startDate" value="@ViewBag.StartDate">
            </div>
            <div>
                <label for="endDate">End Date:</label>
                <input type="date" id="endDate" name="endDate" value="@ViewBag.EndDate">
            </div>
            <button id="applyFilterButton">Apply Filter</button>
            <button id="resetFilterButton">Reset Filter</button>
        </div>

        <div class="table-container">
            <form id="csrfForm">
                @Html.AntiForgeryToken()
            </form>
            <table id="entryTable">
                <thead>
                    <tr>
                        <th>Firma</th>
                        <th>Punct de Lucru</th>
                        <th>Numar Telefon</th>
                        <th data-column="Data">Data</th>
                        <th>Zi</th>
                        <th>Ora Apel</th>
                        <th>Durata Apel</th>
                        <th data-column="InseratDe">Inserat De</th>
                        <th data-column="ModificatDe">Modificat De</th>
                        <th>Actiuni</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Firma</td>
                            <td>@item.PctLucru</td>
                            <td>@item.NrTelefon</td>
                            <td data-column="Data">
                                <input type="date" value="@item.Data" data-id="@item.Id" data-field="Data" class="entry-input" disabled>
                            </td>
                            <td class="not-editable">@item.Zi</td>
                            <td data-field="OraApel">@item.OraApel</td>
                            <td>@item.DurataApel</td>
                            <td data-column="InseratDe" class="not-editable">@item.InseratDe</td>
                            <td data-column="ModificatDe" class="not-editable">@item.ModificatDe</td>
                            <td class="center-cell">
                                <button class="details-button" data-id="@item.Id">Detalii</button>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>

            <!-- Pagination controls -->
            <div class="pagination">
                @if (currentPage > 1)
                {
                    <a href="@Url.Action("ViewEntries", new { page = 1, filterFirma = ViewBag.FilterFirma, filterPctLucru = ViewBag.FilterPctLucru, filterNrTelefon = ViewBag.FilterNrTelefon, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })" class="page-link">First</a>
                    <a href="@Url.Action("ViewEntries", new { page = currentPage - 1, filterFirma = ViewBag.FilterFirma, filterPctLucru = ViewBag.FilterPctLucru, filterNrTelefon = ViewBag.FilterNrTelefon, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })" class="page-link">Previous</a>
                }

                @{
                    var startPage = currentPage - (displayPages / 2);
                    var endPage = currentPage + (displayPages / 2);

                    if (startPage < 1)
                    {
                        endPage = endPage - (startPage - 1);
                        startPage = 1;
                    }

                    if (endPage > totalPages)
                    {
                        startPage = startPage - (endPage - totalPages);
                        endPage = totalPages;
                    }

                    if (startPage < 1)
                    {
                        startPage = 1;
                    }

                    if (endPage - startPage + 1 < displayPages)
                    {
                        endPage = startPage + displayPages - 1;
                        if (endPage > totalPages)
                        {
                            endPage = totalPages;
                        }
                    }
                }

                @if (startPage > 1)
                {
                    <a href="@Url.Action("ViewEntries", new { page = startPage - 1, filterFirma = ViewBag.FilterFirma, filterPctLucru = ViewBag.FilterPctLucru, filterNrTelefon = ViewBag.FilterNrTelefon, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })" class="page-link">...</a>
                }

                @for (int i = startPage; i <= endPage; i++)
                {
                    if (i == currentPage)
                    {
                        <span class="page-link active">@i</span>
                    }
                    else
                    {
                        <a href="@Url.Action("ViewEntries", new { page = i, filterFirma = ViewBag.FilterFirma, filterPctLucru = ViewBag.FilterPctLucru, filterNrTelefon = ViewBag.FilterNrTelefon, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })" class="page-link">@i</a>
                    }
                }

                @if (endPage < totalPages)
                {
                    <a href="@Url.Action("ViewEntries", new { page = endPage + 1, filterFirma = ViewBag.FilterFirma, filterPctLucru = ViewBag.FilterPctLucru, filterNrTelefon = ViewBag.FilterNrTelefon, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })" class="page-link">...</a>
                }

                @if (currentPage < totalPages)
                {
                    <a href="@Url.Action("ViewEntries", new { page = currentPage + 1, filterFirma = ViewBag.FilterFirma, filterPctLucru = ViewBag.FilterPctLucru, filterNrTelefon = ViewBag.FilterNrTelefon, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })" class="page-link">Next</a>
                    <a href="@Url.Action("ViewEntries", new { page = totalPages, filterFirma = ViewBag.FilterFirma, filterPctLucru = ViewBag.FilterPctLucru, filterNrTelefon = ViewBag.FilterNrTelefon, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })" class="page-link">Last</a>
                }
            </div>
        </div>
    </div>

    <div id="entryDetailsModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Detalii Apel</h2>
            <div id="entryDetails"></div>
            <button id="modifyEntryButton">Modificare</button>
        </div>
    </div>

    @Html.Partial("_Footer")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const colorDayAndTimeCells = (row) => {
                const ziCell = row.querySelector('.not-editable');
                if (ziCell) {
                    const day = ziCell.textContent.trim();
                    if (day === 'Saturday' || day === 'Sunday') {
                        ziCell.style.backgroundColor = 'yellow';
                    } else {
                        ziCell.style.backgroundColor = '';
                    }
                }

                const oraApelCell = row.querySelector('[data-field="OraApel"]');
                if (oraApelCell) {
                    const time = oraApelCell.textContent.trim();
                    if (time) {
                        const [hours, minutes] = time.split(':').map(Number);
                        if ((hours >= 19 && hours <= 23) || (hours >= 0 && hours < 8)) {
                            oraApelCell.dataset.originalColor = oraApelCell.style.backgroundColor;
                            oraApelCell.style.backgroundColor = 'yellow';
                        } else {
                            oraApelCell.dataset.originalColor = oraApelCell.style.backgroundColor;
                            oraApelCell.style.backgroundColor = '';
                        }
                    } else {
                        oraApelCell.dataset.originalColor = oraApelCell.style.backgroundColor;
                        oraApelCell.style.backgroundColor = '';
                    }
                }
            };

            document.querySelectorAll('tbody tr').forEach(row => {
                colorDayAndTimeCells(row);
            });

            // Filter Button and Dropdown Logic
            const filterButton = document.getElementById('filterButton');
            const filterDropdown = document.getElementById('filterDropdown');
            filterButton.addEventListener('click', () => {
                filterDropdown.classList.toggle('visible');
            });

            // Fetch Suggestions Logic
            const fetchSuggestionsForFilter = async (term, field, firma = null) => {
                const response = await fetch(`/Helpdesk/GetSuggestions?term=${term}&field=${field}&firma=${firma}`);
                const suggestions = await response.json();
                return suggestions;
            };

            // Handle Firma Suggestions for Filter
            const filterFirmaInput = document.getElementById('filterFirma');
            const firmaSuggestionsDiv = document.getElementById('firmaSuggestions');
            filterFirmaInput.addEventListener('input', async () => {
                const term = filterFirmaInput.value;
                if (term.length >= 3) {
                    const suggestions = await fetchSuggestionsForFilter(term, 'Firma');
                    firmaSuggestionsDiv.innerHTML = suggestions.map(s => `<div>${s}</div>`).join('');
                    // Add click event listeners to suggestions
                    firmaSuggestionsDiv.querySelectorAll('div').forEach(suggestion => {
                        suggestion.addEventListener('click', () => {
                            filterFirmaInput.value = suggestion.textContent;
                            firmaSuggestionsDiv.innerHTML = '';
                        });
                    });
                } else {
                    firmaSuggestionsDiv.innerHTML = '';
                }
            });

            // Handle Punct de Lucru Suggestions for Filter
            const filterPctLucruInput = document.getElementById('filterPctLucru');
            const pctLucruSuggestionsDiv = document.getElementById('pctLucruSuggestions');
            filterPctLucruInput.addEventListener('input', async () => {
                const term = filterPctLucruInput.value;
                const firma = filterFirmaInput.value;
                if (term.length >= 3) {
                    const suggestions = await fetchSuggestionsForFilter(term, 'PctLucru', firma);
                    pctLucruSuggestionsDiv.innerHTML = suggestions.map(s => `<div>${s}</div>`).join('');
                    // Add click event listeners to suggestions
                    pctLucruSuggestionsDiv.querySelectorAll('div').forEach(suggestion => {
                        suggestion.addEventListener('click', () => {
                            filterPctLucruInput.value = suggestion.textContent;
                            pctLucruSuggestionsDiv.innerHTML = '';
                        });
                    });
                } else {
                    pctLucruSuggestionsDiv.innerHTML = '';
                }
            });

            // Handle Numar Telefon Suggestions for Filter
            const filterNrTelefonInput = document.getElementById('filterNrTelefon');
            const nrTelefonSuggestionsDiv = document.getElementById('nrTelefonSuggestions');
            filterNrTelefonInput.addEventListener('input', async () => {
                const term = filterNrTelefonInput.value;
                const firma = filterFirmaInput.value;
                if (term.length >= 3) {
                    const suggestions = await fetchSuggestionsForFilter(term, 'NrTelefon', firma);
                    nrTelefonSuggestionsDiv.innerHTML = suggestions.map(s => `<div>${s}</div>`).join('');
                    // Add click event listeners to suggestions
                    nrTelefonSuggestionsDiv.querySelectorAll('div').forEach(suggestion => {
                        suggestion.addEventListener('click', () => {
                            filterNrTelefonInput.value = suggestion.textContent;
                            nrTelefonSuggestionsDiv.innerHTML = '';
                        });
                    });
                } else {
                    nrTelefonSuggestionsDiv.innerHTML = '';
                }
            });

            // Apply Filter Logic
            const applyFilterButton = document.getElementById('applyFilterButton');
            applyFilterButton.addEventListener('click', () => {
                const filterFirma = filterFirmaInput.value;
                const filterPctLucru = filterPctLucruInput.value;
                const filterNrTelefon = filterNrTelefonInput.value;
                const startDate = document.getElementById('startDate').value;
                const endDate = document.getElementById('endDate').value;
                window.location.href = `/Helpdesk/ViewEntries?page=1&filterFirma=${filterFirma}&filterPctLucru=${filterPctLucru}&filterNrTelefon=${filterNrTelefon}&startDate=${startDate}&endDate=${endDate}`;
            });

            // Reset Filter Logic
            const resetFilterButton = document.getElementById('resetFilterButton');
            resetFilterButton.addEventListener('click', () => {
                filterFirmaInput.value = '';
                filterPctLucruInput.value = '';
                filterNrTelefonInput.value = '';
                document.getElementById('startDate').value = '';
                document.getElementById('endDate').value = '';
            });

            // Entry Details Modal Logic
            document.querySelectorAll('.details-button').forEach(button => {
                button.addEventListener('click', async function () {
                    const entryId = this.getAttribute('data-id');
                    const entryDetails = await fetchEntryDetails(entryId);
                    document.getElementById('entryDetails').innerHTML = entryDetails;
                    document.getElementById('modifyEntryButton').setAttribute('data-id', entryId);
                    document.getElementById('entryDetailsModal').style.display = "block";
                });
            });

            document.querySelector('.close').addEventListener('click', function () {
                document.getElementById('entryDetailsModal').style.display = "none";
            });

            window.addEventListener('click', function (event) {
                const modal = document.getElementById('entryDetailsModal');
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            });

            async function fetchEntryDetails(id) {
                const response = await fetch(`/Helpdesk/GetEntryDetails/${id}`);
                const data = await response.json();
                return `
                        <table>
                            <tr><td>Firma:</td><td>${data.firma || ''}</td></tr>
                            <tr><td>Punct de Lucru:</td><td>${data.pctLucru || ''}</td></tr>
                            <tr><td>Prioritate:</td><td>${data.priority || ''}</td></tr>
                            <tr><td>Numar Telefon:</td><td>${data.nrTelefon || ''}</td></tr>
                            <tr><td>Data:</td><td>${formatDateToMMDDYYYY(data.data)}</td></tr>
                            <tr><td>Zi:</td><td>${data.zi || ''}</td></tr>
                            <tr><td>Ora Apel:</td><td>${data.oraApel || ''}</td></tr>
                            <tr><td>Durata Apel:</td><td>${data.durataApel || ''}</td></tr>
                            <tr><td>Problema:</td><td>${data.problema || ''}</td></tr>
                            <tr><td>Rezolvare:</td><td>${data.rezolvare || ''}</td></tr>
                            <tr><td>Ins Time:</td><td>${formatDateTimeToLocal(data.insTime)}</td></tr>
                            <tr><td>Mod Time:</td><td>${formatDateTimeToLocal(data.modTime)}</td></tr>
                            <tr><td>Ins User:</td><td>${data.insUserName || ''}</td></tr>
                            <tr><td>Mod User:</td><td>${data.modUserName || ''}</td></tr>
                        </table>
                    `;
            }

            function formatDateToMMDDYYYY(dateTime) {
                if (!dateTime) return '';
                const date = new Date(dateTime);
                const month = ("0" + (date.getMonth() + 1)).slice(-2);
                const day = ("0" + date.getDate()).slice(-2);
                const year = date.getFullYear();
                return `${month}-${day}-${year}`;
            }

            function formatDateTimeToLocal(dateTime) {
                if (!dateTime) return '';
                const date = new Date(dateTime);
                return date.toLocaleString();
            }

            document.getElementById('modifyEntryButton').addEventListener('click', function () {
                const entryId = this.getAttribute('data-id');
                window.location.href = `/Helpdesk/ModifyEntry/${entryId}`;
            });

            window.exportEntries = function (format) {
                const filterFirma = document.getElementById('filterFirma').value;
                const filterPctLucru = document.getElementById('filterPctLucru').value;
                const filterNrTelefon = document.getElementById('filterNrTelefon').value;
                const startDate = document.getElementById('startDate').value;
                const endDate = document.getElementById('endDate').value;

                if (format === 'excel') {
                    window.location.href = `/Helpdesk/ExportToExcel?filterFirma=${filterFirma}&filterPctLucru=${filterPctLucru}&filterNrTelefon=${filterNrTelefon}&startDate=${startDate}&endDate=${endDate}`;
                } else if (format === 'pdf') {
                    window.location.href = `/Helpdesk/ExportToPdf?filterFirma=${filterFirma}&filterPctLucru=${filterPctLucru}&filterNrTelefon=${filterNrTelefon}&startDate=${startDate}&endDate=${endDate}`;
                }
            };
        });
    </script>
</body>
</html>
