@model IEnumerable<dynamic>

@{
    Layout = null;
    var currentPage = ViewBag.CurrentPage as int? ?? 1;
    var totalPages = ViewBag.TotalPages as int? ?? 1;
    var userName = ViewBag.UserName;
    var displayPages = 15; // Number of pages to display in the pagination
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>View Entries</title>
    <!-- Include Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
</head>
<body class="d-flex flex-column min-vh-100 bg-light">
    @Html.Partial("_Header")

    <div class="container my-4 flex-grow-1">

        <!-- Display success message if modification was successful -->
        @if (TempData["ModificationSuccess"] != null && (bool)TempData["ModificationSuccess"] == true)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                Modificarea a fost realizată cu succes!
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <!-- Button Row for Adaugare Apel -->
        <div class="row mb-2">
            <div class="col-12">
                <button id="addEntryButton" class="btn btn-primary" onclick="location.href='/Helpdesk/Index'">
                    <i class="bi bi-plus-circle"></i> Adaugare Apel
                </button>
            </div>
        </div>

        <!-- Button Row for Filtrare and Export -->
        <div class="row mb-4 mt-4">
            <div class="col-auto">
                <button id="filterButton" class="btn btn-secondary">
                    <i class="bi bi-funnel"></i> Filtrare
                </button>
            </div>
            <div class="col-auto">
                <div class="dropdown">
                    <button class="btn btn-success dropdown-toggle" type="button" id="exportButton" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-box-arrow-down"></i> Export
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="exportButton">
                        <li>
                            <a class="dropdown-item" href="#" onclick="exportEntries('excel')">
                                <i class="bi bi-file-earmark-excel"></i> Excel
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="#" onclick="exportEntries('pdf')">
                                <i class="bi bi-file-pdf"></i> PDF
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Filter Dropdown Menu -->
        <div id="filterDropdown" class="bg-white p-3 shadow-sm rounded mb-3 d-none">
            <div class="mb-2 position-relative">
                <label for="filterFirma" class="form-label">Firma:</label>
                <input type="text" id="filterFirma" name="filterFirma" value="@ViewBag.FilterFirma" class="form-control">
                <div id="firmaSuggestions" class="suggestions dropdown-menu shadow p-2" style="position: absolute; display: none; min-width: 100%; margin-top: 5px;"></div>
            </div>

            <div class="mb-2 position-relative">
                <label for="filterPctLucru" class="form-label">Punct de Lucru:</label>
                <input type="text" id="filterPctLucru" name="filterPctLucru" value="@ViewBag.FilterPctLucru" class="form-control">
                <div id="pctLucruSuggestions" class="suggestions dropdown-menu shadow p-2" style="position: absolute; display: none; min-width: 100%; margin-top: 5px;"></div>
            </div>

            <div class="mb-2 position-relative">
                <label for="filterNrTelefon" class="form-label">Numar Telefon:</label>
                <input type="text" id="filterNrTelefon" name="filterNrTelefon" value="@ViewBag.FilterNrTelefon" class="form-control">
                <div id="nrTelefonSuggestions" class="suggestions dropdown-menu shadow p-2" style="position: absolute; display: none; min-width: 100%; margin-top: 5px;"></div>
            </div>

            <div class="mb-2">
                <label for="filterInTimpulProgramului" class="form-label">In Timpul Programului:</label>
                <select id="filterInTimpulProgramului" name="filterInTimpulProgramului" class="form-select">
                    <option value="">Toate</option>
                    <option value="Da">Da</option>
                    <option value="Nu">Nu</option>
                </select>
            </div>

            <div class="mb-2">
                <label for="startDate" class="form-label">Start Date:</label>
                <input type="date" id="startDate" name="startDate" value="@ViewBag.StartDate" class="form-control">
            </div>
            <div class="mb-2">
                <label for="endDate" class="form-label">End Date:</label>
                <input type="date" id="endDate" name="endDate" value="@ViewBag.EndDate" class="form-control">
            </div>
            <button id="applyFilterButton" class="btn btn-primary">
                <i class="bi bi-check-circle"></i> Apply Filter
            </button>
            <button id="resetFilterButton" class="btn btn-secondary">
                <i class="bi bi-arrow-clockwise"></i> Reset Filter
            </button>
        </div>


        <!-- Table Container -->
        <div class="table-responsive">
            <form id="csrfForm">
                @Html.AntiForgeryToken()
            </form>
            <table id="entryTable" class="table table-bordered table-hover">
                <thead class="table-dark align-middle text-center">
                    <tr>
                        <th></th> 
                        <th>Firma</th>
                        <th>Punct de Lucru</th>
                        <th>Numar Telefon</th>
                        <th>Data</th>
                        <th>Zi</th>
                        <th>Ora Apel</th>
                        <th>Durata Apel</th>
                        <th>In Timpul Programului</th>
                        <th>Inserat De</th>
                        <th>Modificat De</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model)
                    {
                        var oraApelDateTime = DateTime.Parse($"{item.Data} {item.OraApel}");
                        var isWeekend = oraApelDateTime.DayOfWeek == DayOfWeek.Saturday || oraApelDateTime.DayOfWeek == DayOfWeek.Sunday;
                        var isWithinWorkingHours = oraApelDateTime.TimeOfDay >= TimeSpan.FromHours(8) && oraApelDateTime.TimeOfDay < TimeSpan.FromHours(19);

                        var isInWorkingHoursBadge = !isWeekend && isWithinWorkingHours ? "<span class='badge bg-success'>Da</span>" : "<span class='badge bg-danger'>Nu</span>";

                        <tr>
                            <td class="text-center">
                                <!-- Icon button without background, green color, and smaller size -->
                                <button class="btn btn-link p-0 details-button" data-id="@item.Id">
                                    <i class="bi bi-search text-success fs-5"></i> <!-- Magnifying glass icon -->
                                </button>
                            </td>
                            <td>@item.Firma</td>
                            <td>@item.PctLucru</td>
                            <td>@item.NrTelefon</td>
                            <td><input type="date" value="@item.Data" data-id="@item.Id" data-field="Data" class="form-control" disabled></td>
                            <td>@item.Zi</td>
                            <td>@item.OraApel</td>
                            <td>@item.DurataApel</td>
                            <td class="align-middle text-center">@Html.Raw(isInWorkingHoursBadge)</td>
                            <td>@item.InseratDe</td>
                            <td>@item.ModificatDe</td>
                        </tr>


                    }
                </tbody>
            </table>

            <!-- Pagination controls -->
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    @if (currentPage > 1)
                    {
                        <li class="page-item">
                            <a href="@Url.Action("ViewEntries", new { page = 1, filterFirma = ViewBag.FilterFirma, filterPctLucru = ViewBag.FilterPctLucru, filterNrTelefon = ViewBag.FilterNrTelefon, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })" class="page-link">First</a>
                        </li>
                        <li class="page-item">
                            <a href="@Url.Action("ViewEntries", new { page = currentPage - 1, filterFirma = ViewBag.FilterFirma, filterPctLucru = ViewBag.FilterPctLucru, filterNrTelefon = ViewBag.FilterNrTelefon, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })" class="page-link">Previous</a>
                        </li>
                    }

                    @{
                        var startPage = currentPage - (displayPages / 2);
                        var endPage = currentPage + (displayPages / 2);

                        if (startPage < 1)
                        {
                            endPage = endPage - (startPage - 1);
                            startPage = 1;
                        }

                        if (endPage > totalPages)
                        {
                            startPage = startPage - (endPage - totalPages);
                            endPage = totalPages;
                        }

                        if (startPage < 1)
                        {
                            startPage = 1;
                        }

                        if (endPage - startPage + 1 < displayPages)
                        {
                            endPage = startPage + displayPages - 1;
                            if (endPage > totalPages)
                            {
                                endPage = totalPages;
                            }
                        }
                    }

                    @if (startPage > 1)
                    {
                        <li class="page-item">
                            <a href="@Url.Action("ViewEntries", new { page = startPage - 1, filterFirma = ViewBag.FilterFirma, filterPctLucru = ViewBag.FilterPctLucru, filterNrTelefon = ViewBag.FilterNrTelefon, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })" class="page-link">...</a>
                        </li>
                    }

                    @for (int i = startPage; i <= endPage; i++)
                    {
                        if (i == currentPage)
                        {
                            <li class="page-item active"><span class="page-link">@i</span></li>
                        }
                        else
                        {
                            <li class="page-item">
                                <a href="@Url.Action("ViewEntries", new { page = i, filterFirma = ViewBag.FilterFirma, filterPctLucru = ViewBag.FilterPctLucru, filterNrTelefon = ViewBag.FilterNrTelefon, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })" class="page-link">@i</a>
                            </li>
                        }
                    }

                    @if (endPage < totalPages)
                    {
                        <li class="page-item">
                            <a href="@Url.Action("ViewEntries", new { page = endPage + 1, filterFirma = ViewBag.FilterFirma, filterPctLucru = ViewBag.FilterPctLucru, filterNrTelefon = ViewBag.FilterNrTelefon, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })" class="page-link">...</a>
                        </li>
                    }

                    @if (currentPage < totalPages)
                    {
                        <li class="page-item">
                            <a href="@Url.Action("ViewEntries", new { page = currentPage + 1, filterFirma = ViewBag.FilterFirma, filterPctLucru = ViewBag.FilterPctLucru, filterNrTelefon = ViewBag.FilterNrTelefon, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })" class="page-link">Next</a>
                        </li>
                        <li class="page-item">
                            <a href="@Url.Action("ViewEntries", new { page = totalPages, filterFirma = ViewBag.FilterFirma, filterPctLucru = ViewBag.FilterPctLucru, filterNrTelefon = ViewBag.FilterNrTelefon, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })" class="page-link">Last</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>

    <!-- Entry Details Modal -->
    <div id="entryDetailsModal" class="modal fade" tabindex="-1" aria-labelledby="entryDetailsModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="entryDetailsModalLabel">Detalii Apel</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="entryDetails"></div>
                <div class="modal-footer">
                    <button id="modifyEntryButton" class="btn btn-primary">
                        <i class="bi bi-pencil"></i> Modificare
                    </button>
                </div>

            </div>
        </div>
    </div>

    @Html.Partial("_Footer")

    <!-- Include Bootstrap JS and dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const fetchSuggestionsForFilter = async (term, field, firma = null, pctLucru = null) => {
                const params = new URLSearchParams({ term, field });
                if (firma) {
                    params.append('firma', firma);
                }
                if (pctLucru) {
                    params.append('pctLucru', pctLucru);
                }
                const response = await fetch(`/Helpdesk/GetSuggestions?${params.toString()}`);
                const suggestions = await response.json();
                return suggestions;
            };

            const fetchNumarTelefonSuggestions = async (term) => {
                const response = await fetch(`/Helpdesk/GetNumarTelefonSuggestions?term=${encodeURIComponent(term)}`);
                const suggestions = await response.json();
                return suggestions;
            };

            const handleSuggestions = (inputElement, suggestionsDiv, fetchUrl, field) => {
                inputElement.addEventListener('input', async () => {
                    const term = inputElement.value;
                    if (term.length >= 3) {
                        const suggestions = await fetchUrl(term);
                        let suggestionItems = '';
                        suggestions.forEach(item => {
                            suggestionItems += `<a class="dropdown-item">${item}</a>`;
                        });
                        suggestionsDiv.innerHTML = suggestionItems;
                        suggestionsDiv.style.display = 'block';

                        // Add click event for each suggestion
                        suggestionsDiv.querySelectorAll('.dropdown-item').forEach(suggestion => {
                            suggestion.addEventListener('click', () => {
                                inputElement.value = suggestion.textContent;
                                suggestionsDiv.style.display = 'none';
                            });
                        });
                    } else {
                        suggestionsDiv.style.display = 'none'; // Hide suggestions if input is less than 3 characters
                    }
                });
            };

            // Handle Firma Suggestions for Filter
            const filterFirmaInput = document.getElementById('filterFirma');
            const firmaSuggestionsDiv = document.getElementById('firmaSuggestions');
            handleSuggestions(filterFirmaInput, firmaSuggestionsDiv, (term) => fetchSuggestionsForFilter(term, 'Firma'), 'Firma');

            // Handle Punct de Lucru Suggestions for Filter
            const filterPctLucruInput = document.getElementById('filterPctLucru');
            const pctLucruSuggestionsDiv = document.getElementById('pctLucruSuggestions');
            handleSuggestions(filterPctLucruInput, pctLucruSuggestionsDiv, (term) => fetchSuggestionsForFilter(term, 'PctLucru'), 'PctLucru');

            // Update Firma suggestions when PctLucru changes
            filterPctLucruInput.addEventListener('input', () => {
                handleSuggestions(filterFirmaInput, firmaSuggestionsDiv, (term) => fetchSuggestionsForFilter(term, 'Firma', null, filterPctLucruInput.value), 'Firma');
            });

            // Update PctLucru suggestions when Firma changes
            filterFirmaInput.addEventListener('input', () => {
                handleSuggestions(filterPctLucruInput, pctLucruSuggestionsDiv, (term) => fetchSuggestionsForFilter(term, 'PctLucru', filterFirmaInput.value), 'PctLucru');
            });

            // Handle Numar Telefon Suggestions for Filter
            const filterNrTelefonInput = document.getElementById('filterNrTelefon');
            const nrTelefonSuggestionsDiv = document.getElementById('nrTelefonSuggestions');
            handleSuggestions(filterNrTelefonInput, nrTelefonSuggestionsDiv, fetchNumarTelefonSuggestions, 'NrTelefon');

            // Apply Filter Logic
            const applyFilter = () => {
                const filterFirma = filterFirmaInput.value;
                const filterPctLucru = filterPctLucruInput.value;
                const filterNrTelefon = filterNrTelefonInput.value;
                const startDate = document.getElementById('startDate').value;
                const endDate = document.getElementById('endDate').value;
                const filterInTimpulProgramului = document.getElementById('filterInTimpulProgramului').value;

                window.location.href = `/Helpdesk/ViewEntries?page=1&filterFirma=${filterFirma}&filterPctLucru=${filterPctLucru}&filterNrTelefon=${filterNrTelefon}&startDate=${startDate}&endDate=${endDate}&filterInTimpulProgramului=${filterInTimpulProgramului}`;
            };


            const applyFilterButton = document.getElementById('applyFilterButton');
            applyFilterButton.addEventListener('click', applyFilter);

            // Reset Filter Logic
            resetFilterButton.addEventListener('click', () => {
                filterFirmaInput.value = '';
                filterPctLucruInput.value = '';
                filterNrTelefonInput.value = '';
                document.getElementById('startDate').value = '';
                document.getElementById('endDate').value = '';
                document.getElementById('filterInTimpulProgramului').value = '';
            });


            // Toggle Filter Dropdown Visibility
            document.getElementById('filterButton').addEventListener('click', function () {
                const filterDropdown = document.getElementById('filterDropdown');
                filterDropdown.classList.toggle('d-none');
            });

            // Entry Details Modal Logic
            document.querySelectorAll('.details-button').forEach(button => {
                button.addEventListener('click', async function () {
                    const entryId = this.getAttribute('data-id');
                    const entryDetails = await fetchEntryDetails(entryId);
                    document.getElementById('entryDetails').innerHTML = entryDetails;
                    document.getElementById('modifyEntryButton').setAttribute('data-id', entryId);
                    const modal = new bootstrap.Modal(document.getElementById('entryDetailsModal'));
                    modal.show();
                });
            });

            async function fetchEntryDetails(id) {
                const response = await fetch(`/Helpdesk/GetEntryDetails/${id}`);
                const data = await response.json();
                return `
                    <table class="table table-bordered">
                        <tr><td class="fw-bold text-end">Firma:</td><td>${data.firma || ''}</td></tr>
                        <tr><td class="fw-bold text-end">Punct de Lucru:</td><td>${data.pctLucru || ''}</td></tr>
                        <tr><td class="fw-bold text-end">Prioritate:</td><td>${data.priority || ''}</td></tr>
                        <tr><td class="fw-bold text-end">Numar Telefon:</td><td>${data.nrTelefon || ''}</td></tr>
                        <tr><td class="fw-bold text-end">Data:</td><td>${formatDateToMMDDYYYY(data.data)}</td></tr>
                        <tr><td class="fw-bold text-end">Zi:</td><td>${data.zi || ''}</td></tr>
                        <tr><td class="fw-bold text-end">Ora Apel:</td><td>${data.oraApel || ''}</td></tr>
                        <tr><td class="fw-bold text-end">Durata Apel:</td><td>${data.durataApel || ''}</td></tr>
                        <tr><td class="fw-bold text-end">Problema:</td><td>${data.problema || ''}</td></tr>
                        <tr><td class="fw-bold text-end">Rezolvare:</td><td>${data.rezolvare || ''}</td></tr>
                        <tr><td class="fw-bold text-end">Ins Time:</td><td>${formatDateTimeToLocal(data.insTime)}</td></tr>
                        <tr><td class="fw-bold text-end">Mod Time:</td><td>${formatDateTimeToLocal(data.modTime)}</td></tr>
                        <tr><td class="fw-bold text-end">Ins User:</td><td>${data.insUserName || ''}</td></tr>
                        <tr><td class="fw-bold text-end">Mod User:</td><td>${data.modUserName || ''}</td></tr>
                    </table>
                `;
            }

            function formatDateToMMDDYYYY(dateTime) {
                if (!dateTime) return '';
                const date = new Date(dateTime);
                const month = ("0" + (date.getMonth() + 1)).slice(-2);
                const day = ("0" + date.getDate()).slice(-2);
                const year = date.getFullYear();
                return `${month}-${day}-${year}`;
            }

            function formatDateTimeToLocal(dateTime) {
                if (!dateTime) return '';
                const date = new Date(dateTime);
                return date.toLocaleString();
            }

            document.getElementById('modifyEntryButton').addEventListener('click', function () {
                const entryId = this.getAttribute('data-id');
                window.location.href = `/Helpdesk/ModifyEntry/${entryId}`;
            });

            window.exportEntries = function (format) {
                const filterFirma = document.getElementById('filterFirma').value;
                const filterPctLucru = document.getElementById('filterPctLucru').value;
                const filterNrTelefon = document.getElementById('filterNrTelefon').value;
                const startDate = document.getElementById('startDate').value;
                const endDate = document.getElementById('endDate').value;

                if (format === 'excel') {
                    window.location.href = `/Helpdesk/ExportToExcel?filterFirma=${filterFirma}&filterPctLucru=${filterPctLucru}&filterNrTelefon=${filterNrTelefon}&startDate=${startDate}&endDate=${endDate}`;
                } else if (format === 'pdf') {
                    window.location.href = `/Helpdesk/ExportToPdf?filterFirma=${filterFirma}&filterPctLucru=${filterPctLucru}&filterNrTelefon=${filterNrTelefon}&startDate=${startDate}&endDate=${endDate}`;
                }
            };
        });
    </script>
</body>
</html>
