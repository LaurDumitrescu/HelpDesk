@model IEnumerable<dynamic>

@{
    Layout = null;
    var filterFirma = ViewBag.FilterFirma as string ?? "";
    var filterPctLucru = ViewBag.FilterPctLucru as string ?? "";
    var filterNrTelefon = ViewBag.FilterNrTelefon as string ?? "";
    var currentPage = ViewBag.CurrentPage as int? ?? 1;
    var totalPages = ViewBag.TotalPages as int? ?? 1;
    var userName = ViewBag.UserName;
    var displayPages = 15; // Number of pages to display in the pagination
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lista Numere Telefon</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
</head>
<body>
    @Html.Partial("_Header")

    <div class="container mt-4">
        <!-- Error message (hidden by default) -->
        <div id="error-message-alert" class="alert alert-danger alert-dismissible fade show d-none" role="alert">
            Numarul de telefon este asociat unui apel si nu se poate sterge.
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>

        <!-- Filter Button and Dropdown Menu -->
        <div class="d-flex justify-content-between mb-3">
            <div>
                <button class="btn btn-secondary" id="lista-numere-custom-filter-button">Filtrare</button>
                <button class="btn btn-primary" onclick="exportToExcel()">Export</button>
            </div>
        </div>

        <!-- Filter Dropdown -->
        <div id="lista-numere-custom-filter-dropdown" class="border p-3 mb-3 rounded bg-light d-none">
            <div class="mb-2">
                <label for="lista-numere-filter-firma" class="form-label">Firma:</label>
                <input type="text" class="form-control" id="lista-numere-filter-firma" name="filterFirma" value="@filterFirma">
                <div id="firmaSuggestions" class="dropdown-menu"></div>
            </div>
            <div class="mb-2">
                <label for="lista-numere-filter-pctlucru" class="form-label">Punct de Lucru:</label>
                <input type="text" class="form-control" id="lista-numere-filter-pctlucru" name="filterPctLucru" value="@filterPctLucru">
                <div id="pctLucruSuggestions" class="dropdown-menu"></div>
            </div>
            <div class="mb-2">
                <label for="lista-numere-filter-nrtelefon" class="form-label">Numar Telefon:</label>
                <input type="text" class="form-control" id="lista-numere-filter-nrtelefon" name="filterNrTelefon" value="@filterNrTelefon">
                <div id="nrTelefonSuggestions" class="dropdown-menu"></div>
            </div>
            <div class="d-flex justify-content-start mt-3">
                <button class="btn btn-success me-2" id="lista-numere-custom-apply-filter-button">Apply Filter</button>
                <button class="btn btn-warning" id="lista-numere-custom-reset-filter-button">Reset Filter</button>
            </div>
        </div>

        <!-- Table Container -->
        <div class="table-responsive mb-4">
            <table class="table table-bordered table-striped" id="lista-numere-custom-telefon-table">
                <thead class="table-dark text-white">
                    <tr>
                        <th>Firma</th>
                        <th>Punct de Lucru</th>
                        <th>Numar Telefon</th>
                        <th class="text-center">Actiuni</th> <!-- Center the "Actiuni" column header -->
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Firma</td>
                            <td>@item.PctLucru</td>
                            <td>@item.NrTelefon</td>
                            <td class="d-flex justify-content-center align-items-center">
                                <!-- Center the content vertically and horizontally -->
                                <button class="btn btn-danger btn-sm delete-button" data-id="@item.Id">Sterge</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination controls -->
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @if (currentPage > 1)
                {
                    <li class="page-item"><a href="@Url.Action("ListaNumereTelefon", new { page = 1, filterFirma = filterFirma, filterPctLucru = filterPctLucru, filterNrTelefon = filterNrTelefon })" class="page-link">First</a></li>
                    <li class="page-item"><a href="@Url.Action("ListaNumereTelefon", new { page = currentPage - 1, filterFirma = filterFirma, filterPctLucru = filterPctLucru, filterNrTelefon = filterNrTelefon })" class="page-link">Previous</a></li>
                }

                @{
                    var startPage = currentPage - (displayPages / 2);
                    var endPage = currentPage + (displayPages / 2);

                    if (startPage < 1)
                    {
                        endPage = endPage - (startPage - 1);
                        startPage = 1;
                    }

                    if (endPage > totalPages)
                    {
                        startPage = startPage - (endPage - totalPages);
                        endPage = totalPages;
                    }

                    if (startPage < 1)
                    {
                        startPage = 1;
                    }

                    if (endPage - startPage + 1 < displayPages)
                    {
                        endPage = startPage + displayPages - 1;
                        if (endPage > totalPages)
                        {
                            endPage = totalPages;
                        }
                    }
                }

                @if (startPage > 1)
                {
                    <li class="page-item"><a href="@Url.Action("ListaNumereTelefon", new { page = startPage - 1, filterFirma = filterFirma, filterPctLucru = filterPctLucru, filterNrTelefon = filterNrTelefon })" class="page-link">...</a></li>
                }

                @for (int i = startPage; i <= endPage; i++)
                {
                    if (i == currentPage)
                    {
                        <li class="page-item active"><span class="page-link">@i</span></li>
                    }
                    else
                    {
                        <li class="page-item"><a href="@Url.Action("ListaNumereTelefon", new { page = i, filterFirma = filterFirma, filterPctLucru = filterPctLucru, filterNrTelefon = filterNrTelefon })" class="page-link">@i</a></li>
                    }
                }

                @if (endPage < totalPages)
                {
                    <li class="page-item"><a href="@Url.Action("ListaNumereTelefon", new { page = endPage + 1, filterFirma = filterFirma, filterPctLucru = filterPctLucru, filterNrTelefon = filterNrTelefon })" class="page-link">...</a></li>
                }

                @if (currentPage < totalPages)
                {
                    <li class="page-item"><a href="@Url.Action("ListaNumereTelefon", new { page = currentPage + 1, filterFirma = filterFirma, filterPctLucru = filterPctLucru, filterNrTelefon = filterNrTelefon })" class="page-link">Next</a></li>
                    <li class="page-item"><a href="@Url.Action("ListaNumereTelefon", new { page = totalPages, filterFirma = filterFirma, filterPctLucru = filterPctLucru, filterNrTelefon = filterNrTelefon })" class="page-link">Last</a></li>
                }
            </ul>
        </nav>
    </div>

    <!-- Confirmation Modal -->
    <div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirmare Stergere</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Esti sigur ca vrei sa stergi numarul de telefon? Aceasta actiune este ireversibila.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Nu</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteButton">Da</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            const filterButton = $('#lista-numere-custom-filter-button');
            const filterDropdown = $('#lista-numere-custom-filter-dropdown');
            const applyFilterButton = $('#lista-numere-custom-apply-filter-button');
            const resetFilterButton = $('#lista-numere-custom-reset-filter-button');
            const errorMessageAlert = $('#error-message-alert');

            // Check session storage for error message indicator
            if (sessionStorage.getItem('showErrorMessage') === 'true') {
                errorMessageAlert.removeClass('d-none'); // Show the error message if indicator is set
                sessionStorage.removeItem('showErrorMessage'); // Clear the indicator
            }

            filterButton.click(function () {
                filterDropdown.toggleClass('d-none');
            });

            const applyFilter = () => {
                const filterFirma = $('#lista-numere-filter-firma').val();
                const filterPctLucru = $('#lista-numere-filter-pctlucru').val();
                const filterNrTelefon = $('#lista-numere-filter-nrtelefon').val();
                const url = `@Url.Action("ListaNumereTelefon", "Helpdesk")?filterFirma=${filterFirma}&filterPctLucru=${filterPctLucru}&filterNrTelefon=${filterNrTelefon}`;
                window.location.href = url;
            };

            applyFilterButton.click(applyFilter);

            resetFilterButton.click(function () {
                $('#lista-numere-filter-firma').val('');
                $('#lista-numere-filter-pctlucru').val('');
                $('#lista-numere-filter-nrtelefon').val('');
                $('.dropdown-menu').hide(); // Hide suggestions when filters are reset
            });

            const fetchSuggestionsForFilter = async (term, field, firma = null, pctLucru = null) => {
                const params = new URLSearchParams({ term, field });
                if (firma) {
                    params.append('firma', firma);
                }
                if (pctLucru) {
                    params.append('pctLucru', pctLucru);
                }
                const response = await fetch(`/Helpdesk/GetSuggestions?${params.toString()}`);
                const suggestions = await response.json();
                return suggestions;
            };

            const fetchNumarTelefonSuggestions = async (term) => {
                const response = await fetch(`/Helpdesk/GetNumarTelefonSuggestions?term=${encodeURIComponent(term)}`);
                const suggestions = await response.json();
                return suggestions;
            };

            const handleSuggestions = (inputElement, suggestionsDiv, fetchUrl) => {
                inputElement.on('input', async function () {
                    const term = $(this).val();
                    if (term.length >= 3) {
                        const suggestions = await fetchUrl(term);
                        if (suggestions.length > 0) {
                            suggestionsDiv.html(suggestions.map(s => `<a class="dropdown-item">${s}</a>`).join('')).show();
                            suggestionsDiv.find('a').click(function () {
                                inputElement.val($(this).text());
                                suggestionsDiv.hide();
                            });
                        } else {
                            suggestionsDiv.hide();
                        }
                    } else {
                        suggestionsDiv.hide();
                    }
                });
            };

            handleSuggestions($('#lista-numere-filter-firma'), $('#firmaSuggestions'), (term) => fetchSuggestionsForFilter(term, 'Firma'));
            handleSuggestions($('#lista-numere-filter-pctlucru'), $('#pctLucruSuggestions'), (term) => fetchSuggestionsForFilter(term, 'PctLucru'));
            handleSuggestions($('#lista-numere-filter-nrtelefon'), $('#nrTelefonSuggestions'), fetchNumarTelefonSuggestions);

            $('#lista-numere-filter-firma').on('input', function () {
                handleSuggestions($('#lista-numere-filter-pctlucru'), $('#pctLucruSuggestions'), (term) => fetchSuggestionsForFilter(term, 'PctLucru', $(this).val()));
            });

            $('#lista-numere-filter-pctlucru').on('input', function () {
                handleSuggestions($('#lista-numere-filter-firma'), $('#firmaSuggestions'), (term) => fetchSuggestionsForFilter(term, 'Firma', null, $(this).val()));
            });

            $(document).on('keydown', function (event) {
                if (event.key === 'Enter' && !filterDropdown.hasClass('d-none')) {
                    applyFilter();
                }
            });

            // Delete button functionality
            $('.delete-button').click(function () {
                const id = $(this).data('id');
                $("#confirmDeleteButton").data('id', id); // Store id in the confirm button
                $("#deleteConfirmationModal").modal('show'); // Show the Bootstrap modal
            });

            $("#confirmDeleteButton").click(function () {
                const id = $(this).data('id');
                $.ajax({
                    url: '@Url.Action("DeleteFirmaNrTelefon", "Helpdesk")',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            location.reload(); // Reload the page on successful deletion
                        } else {
                            sessionStorage.setItem('showErrorMessage', 'true'); // Set indicator to show error message on reload
                            location.reload(); // Reload the page to show error message
                        }
                    },
                    error: function () {
                        sessionStorage.setItem('showErrorMessage', 'true'); // Set indicator to show error message on reload
                        location.reload(); // Reload the page to show error message
                    }
                });
                $("#deleteConfirmationModal").modal('hide'); // Hide the Bootstrap modal after the AJAX call
            });

            // Reset error message visibility when alert is closed
            errorMessageAlert.on('closed.bs.alert', function () {
                errorMessageAlert.addClass('d-none'); // Hide the error alert when it's closed
            });
        });

        function exportToExcel() {
            const rows = Array.from(document.querySelectorAll('#lista-numere-custom-telefon-table tbody tr')).map(row => {
                return {
                    Firma: row.cells[0].textContent.trim(),
                    PctLucru: row.cells[1].textContent.trim(),
                    NrTelefon: row.cells[2].textContent.trim()
                };
            });

            const data = { rows: rows };

            fetch('@Url.Action("ExportFilteredEntriesToExcel", "Helpdesk")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': '@Html.AntiForgeryToken()'
                },
                body: JSON.stringify(data)
            })
                .then(response => response.blob())
                .then(blob => {
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'FilteredEntries.xlsx';
                    document.body.appendChild(a);
                    a.click();
                    a.remove();
                })
                .catch(error => console.error('Error exporting to Excel:', error));
        }
    </script>
</body>
</html>
